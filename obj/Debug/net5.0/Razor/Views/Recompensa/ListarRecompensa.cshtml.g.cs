#pragma checksum "C:\ReciGanhaMVC\Views\Recompensa\ListarRecompensa.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "6794ee1d8388949877b6d9980906304db121e22d"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Recompensa_ListarRecompensa), @"mvc.1.0.view", @"/Views/Recompensa/ListarRecompensa.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\ReciGanhaMVC\Views\_ViewImports.cshtml"
using ReciGanhaMVC;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\ReciGanhaMVC\Views\_ViewImports.cshtml"
using ReciGanhaMVC.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"6794ee1d8388949877b6d9980906304db121e22d", @"/Views/Recompensa/ListarRecompensa.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"04a1fb6c8860a1f6abae4af1cd7760c2d77a5da8", @"/Views/_ViewImports.cshtml")]
    #nullable restore
    public class Views_Recompensa_ListarRecompensa : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<IEnumerable<ReciGanhaMVC.Models.RecompensaViewModel>>
    #nullable disable
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 3 "C:\ReciGanhaMVC\Views\Recompensa\ListarRecompensa.cshtml"
  
    ViewBag.Title = "Recompensas" ; 

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<div class=\"background\">\r\n\r\n    <div class=\"container-fluid\">\r\n");
#nullable restore
#line 10 "C:\ReciGanhaMVC\Views\Recompensa\ListarRecompensa.cshtml"
         if (@TempData["Mensagem"] != null)
        {

#line default
#line hidden
#nullable disable
            WriteLiteral("            <div class=\"alert alert-succes\" role=\"alert\">\r\n            ");
#nullable restore
#line 13 "C:\ReciGanhaMVC\Views\Recompensa\ListarRecompensa.cshtml"
       Write(TempData["Mensagem"]);

#line default
#line hidden
#nullable disable
            WriteLiteral("</div>\r\n");
#nullable restore
#line 14 "C:\ReciGanhaMVC\Views\Recompensa\ListarRecompensa.cshtml"
        }

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n        <!--Configuração para exibir mensagem de erro -->\r\n");
#nullable restore
#line 17 "C:\ReciGanhaMVC\Views\Recompensa\ListarRecompensa.cshtml"
         if (@TempData["MensagemErro"] != null)
        {

#line default
#line hidden
#nullable disable
            WriteLiteral("            <div class=\"alert alert-danger\" role=\"alert\">\r\n                ");
#nullable restore
#line 20 "C:\ReciGanhaMVC\Views\Recompensa\ListarRecompensa.cshtml"
           Write(TempData["MensagemErro"]);

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n            </div>\r\n");
#nullable restore
#line 22 "C:\ReciGanhaMVC\Views\Recompensa\ListarRecompensa.cshtml"
        }

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<style>
    .table-recompensas{
        margin-top: 5vh;
    }

    h2{
        margin-top: 5vh;
    }

    #mensagem-modal{
        color: black;
    }

    .list-recompensas{
        padding-top: 6vh
    }

    .head-recompensas{
        background-color: darkgreen;
        color: white;
    }

    .body-table{
       
    }
    
</style>
<div class=""container list-recompensas"">
    <h2>Recompensas</h2>
");
#nullable restore
#line 53 "C:\ReciGanhaMVC\Views\Recompensa\ListarRecompensa.cshtml"
     if (@TempData["CodigoRecompensa"] != null)
        {

#line default
#line hidden
#nullable disable
            WriteLiteral("            <div class=\"alert alert-succes\" role=\"alert\"> <p style=\"color: black;\">\r\n                Codigo : ");
#nullable restore
#line 56 "C:\ReciGanhaMVC\Views\Recompensa\ListarRecompensa.cshtml"
                    Write(TempData["CodigoRecompensa"]);

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n            </p>\r\n            </div>\r\n");
#nullable restore
#line 59 "C:\ReciGanhaMVC\Views\Recompensa\ListarRecompensa.cshtml"
        }

#line default
#line hidden
#nullable disable
            WriteLiteral(@"    
    <table class=""table table-striped table-recompensas"">
        <tr>
            <thead class=""head-recompensas"">
                <th>*</th>
                <th>Marca</th>
                <th>Descrição</th>
                <th>Custo de pontos</th>
                <th colspan=""2"">Quantidade de recompensas disponiveis</th>
            </thead>
            <th></th>
        </tr>
");
#nullable restore
#line 72 "C:\ReciGanhaMVC\Views\Recompensa\ListarRecompensa.cshtml"
         foreach (var item in Model)
        {

#line default
#line hidden
#nullable disable
            WriteLiteral("            <tbody class=\"body-table\">\r\n                <tr>\r\n                    <td>");
#nullable restore
#line 76 "C:\ReciGanhaMVC\Views\Recompensa\ListarRecompensa.cshtml"
                   Write(Html.DisplayFor(modelItem => item.idRecompensa));

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                    <td>");
#nullable restore
#line 77 "C:\ReciGanhaMVC\Views\Recompensa\ListarRecompensa.cshtml"
                   Write(Html.DisplayFor(modelItem => item.nomeRecompensa));

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                    <td>");
#nullable restore
#line 78 "C:\ReciGanhaMVC\Views\Recompensa\ListarRecompensa.cshtml"
                   Write(Html.DisplayFor(modelItem => item.descricao));

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                    <td>");
#nullable restore
#line 79 "C:\ReciGanhaMVC\Views\Recompensa\ListarRecompensa.cshtml"
                   Write(Html.DisplayFor(modelItem => item.custodePontos));

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                    <td>");
#nullable restore
#line 80 "C:\ReciGanhaMVC\Views\Recompensa\ListarRecompensa.cshtml"
                   Write(Html.DisplayFor(modelItem => item.qtdeRecomepensas));

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                    <td>\r\n                      <button");
            BeginWriteAttribute("onclick", " onclick=\"", 2248, "\"", 2295, 3);
            WriteAttributeValue("", 2258, "AbrirModalCodigo(", 2258, 17, true);
#nullable restore
#line 82 "C:\ReciGanhaMVC\Views\Recompensa\ListarRecompensa.cshtml"
WriteAttributeValue("", 2275, item.idRecompensa, 2275, 18, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue("", 2293, ");", 2293, 2, true);
            EndWriteAttribute();
            WriteLiteral(" type=\"button\" class=\"btn btn-primary\">\r\n                        Resgatar\r\n                      </button>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n");
#nullable restore
#line 88 "C:\ReciGanhaMVC\Views\Recompensa\ListarRecompensa.cshtml"
        }

#line default
#line hidden
#nullable disable
            WriteLiteral("    </table>\r\n    <!--<p>");
#nullable restore
#line 90 "C:\ReciGanhaMVC\Views\Recompensa\ListarRecompensa.cshtml"
      Write(TempData["CodigoRecompensa"]);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"</p>-->
    
     <div class=""modal"" id=""modal-mensagem"" tabindex=""-1"">
                <div class=""modal-dialog"">
                    <div class=""modal-content"">
                    <div class=""modal-header"">
                        <h5 class=""modal-title"">Código</h5>
                        <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                        <span aria-hidden=""true"">&times;</span>
                        </button>
                    </div>
                    <div class=""modal-body"" id=""conteudo-modal"">
    
                    </div>
                    <div class=""modal-footer"">
                        <button type=""button"" class=""btn btn-secondary"" data-dismiss=""modal"">Close</button>
                    </div>
                    </div>
                </div>
                </div>
</div>

<script type=""text/javascript"">

    function AbrirModal()
    {
        $(""#modal-mensagem"").modal(""show"");       
    }



     functio");
            WriteLiteral("n AbrirModalCodigo(idRecompensa) {\r\n        \r\n        $.ajax({\r\n\r\n            url: \"");
#nullable restore
#line 125 "C:\ReciGanhaMVC\Views\Recompensa\ListarRecompensa.cshtml"
             Write(Url.Action("Resgatar", "Recompensa"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",
            data: { id: idRecompensa },//id é o parametro que a controller espera qu está sendo atribuído pelo parametro da função.
            success: function (retorno) {
                //Se não achar a palavra erro quer dizer que não passou pelo catch da controller
                //E assim como retornou um objeto, as propriedades poderão ser lidas.
                var p = document.createElement(""p"");
                    p.innerHTML = retorno
                    $("".modal .modal-dialog .modal-content .modal-body"").html(p);                
                    $(""#modal-mensagem"").modal(""show"");
                /*
                if(retorno.indexOf(""erro"") != -1)
                {
                     
                    ""Código: "" + retorno.idRecompensa + "" Descrição: "" + retorno.nomeRecompensa;
                    alert(""Custo de Pontos: "" + retorno.descricao);

                    //Na variável dados você pode montar um html na mão. Também poderia criar uma partial View
            ");
            WriteLiteral(@"        //Ou pode inserir Temp Data no método da controller e chamálos dentro do body do modal. 
                    //Veja exemplos do projeto que mandei.       
                }
                else 
                {
                    //Se vier pra cá passou pelo catch na controller e provavelmente conterá uma mensagem.
                    //Perceba que tem uma concatenção no catch.                    
                    alert(retorno);
                }*/
            }
            
        });
    }

</script>



");
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<IEnumerable<ReciGanhaMVC.Models.RecompensaViewModel>> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
